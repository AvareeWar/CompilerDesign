{"filter":false,"title":"laundryLang.h","tooltip":"/Assignment4/laundryLang.h","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":163,"column":15},"action":"insert","lines":["/*-------------------------------------------------------------------------*"," *---\t\t\t\t\t\t\t\t\t---*"," *---\t\tlaundryLang.h\t\t\t\t\t\t---*"," *---\t\t\t\t\t\t\t\t\t---*"," *---\t    This file includes files, defines types and declares\t---*"," *---\tvariables and functions used in common for both the lex/flex\t---*"," *---\tand YACC/Bison source files.\t\t\t\t\t---*"," *---\t\t\t\t\t\t\t\t\t---*"," *---\t----\t----\t----\t----\t----\t----\t----\t----\t---*"," *---\t\t\t\t\t\t\t\t\t---*"," *---\tVersion 1a\t\t2017 October 25\t\tJoseph Phillips\t---*"," *---\t\t\t\t\t\t\t\t\t---*"," *-------------------------------------------------------------------------*/","","","#include\t<stdlib.h>","#include\t<stdio.h>","#include\t<string.h>","","","//  PURPOSE:  To distinguish among the different ways something can be washed.","typedef enum","        {","\t  NO_WASH,","\t  HAND_WASH,","\t  MACHINE_WASH","\t}","\thowWash_ty;","","","//  PURPOSE:  To distinguish among the temperatures at which something is","//\twashed. ","typedef enum","        {","\t  NO_TEMP,","\t  COLD_TEMP,","\t  WARM_TEMP,","\t  HOT_TEMP\t\t","\t}","\ttemperature_ty;","","","//  PURPOSE:  To distinguish among the different ways something can be dried.","typedef enum","        {","\t  NO_DRY,","\t  LINE_DRY,","\t  TUMBLE_DRY","\t}","\thowDry_ty;","","","//  PURPOSE:  To distinguish among the things that can be washed.","typedef\tenum","\t{","\t  LIGHTS_WASHED,","\t  DARKS_WASHED,","\t  DELICATES_WASHED,","\t  TROUSERS_WASHED,","\t  SHIRTS_WASHED,","\t  UNDERWEAR_WASHED,","\t  SHEETS_WASHED","\t}","\twashWhat_ty;","","","//  PURPOSE:  To keep track of what is washed and dried, and how they are","//\twashed and dried.","struct LaundrySummary","{","  howWash_ty\t\thowWash_;","  temperature_ty \ttemp_;","  howDry_ty\t\thowDry_;","  int\t\t\twashWhatBitVector_;","","","  //  PURPOSE:  To initialize '*this' to its default values.  No parameters","  //\tNo return value.","  LaundrySummary\t()","  {","    howWash_\t\t= NO_WASH;","    temp_\t\t= NO_TEMP;","    howDry_\t\t= NO_DRY;","    washWhatBitVector_\t= 0;","  }","","","  //  PURPOSE:  To set '*this' equal to 'source'.  Returns reference to","  //\t '*this'.","  LaundrySummary&","\t\toperator=\t(const LaundrySummary&\tsource","\t\t\t\t)","  {","    if  (this != &source)","    {","      howWash_\t\t= source.howWash_;","      temp_\t\t= source.temp_;","      howDry_\t\t= source.howDry_;","      washWhatBitVector_= source.washWhatBitVector_;","    }","","    return(*this);","  }","","","  //  PURPOSE: To erase everything in '*this', like a default constructor.","  //\tNo parameters.  No return value.","  void\t\tclear\t\t()","  {","    temp_\t\t= NO_TEMP;","    howWash_\t\t= NO_WASH;","    howDry_\t\t= NO_DRY;","    washWhatBitVector_\t= 0;","  }","","","  //  PURPOSE:  To note that 'washWhat' was processed.  No return value.","  void\t\trecord\t\t(washWhat_ty\twashWhat","\t\t\t\t)","  {","    washWhatBitVector_\t|= (1 << washWhat);","  }","","","  //  PURPOSE:  To return 'true' if 'washWhat' was laundered, or 'false'","  //\totherwise.","  bool\t\tisMentioned\t(washWhat_ty\twashWhat","\t\t\t\t)","\t\t\t\tconst","  {","    return( (washWhatBitVector_ & (1 << washWhat)) != 0 );","  }","","};","","","//  PURPOSE:  To note that the parser manipulates 'LaundrySummary' instances.","#define\t\tYYSTYPE\t\tstruct LaundrySummary","","","const int\tLINE_LEN\t= 256;","","","//  PURPOSE:  To point to the current position at which tokenizing should be","//\tdone.","extern","char*\t\ttextPtr;","","//  PURPOSE:  To point to the end of the tokenizing input.","extern","char*\t\ttextEndPtr;","","//  PURPOSE:  To hold the result computed by the parser","extern","LaundrySummary\tresult;","","","//  PURPOSE:  To print parse-time error 'cPtr'.  No return value.","extern","int\t\tyyerror\t\t(const char*","\t\t\t\t);","","extern","int\t\tyylex\t\t();"],"id":3}]]},"ace":{"folds":[],"scrolltop":101,"scrollleft":0,"selection":{"start":{"row":103,"column":0},"end":{"row":103,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":18,"state":"start","mode":"ace/mode/c_cpp"}},"hash":"b6ad0f2f7e52ea6a72c200aea075eda88d56e436","timestamp":1510104795918}